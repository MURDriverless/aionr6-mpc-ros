<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="r1_sim">

  <!-- Defining skid-steer controller parameters. --> 
  <xacro:property name="wheel_mu1"        value="200.0"      />
  <xacro:property name="wheel_mu2"        value="100.0"      />
  <xacro:property name="wheel_kp"         value="10000000.0" />
  <xacro:property name="wheel_kd"         value="1.0"        />
  <xacro:property name="wheel_torque"     value="10.0"       />
  <xacro:property name="wheel_separation" value="0.324"      />
  <xacro:property name="wheel_diameter"   value="0.156"      />   

  <!-- Defining macros. -->
  <xacro:macro name="wheel" params="prefix">
    <gazebo reference="${prefix}_wheel_link">
      <material>Gazebo/FlatBlack</material>
      <mu1>${wheel_mu1}</mu1>
      <mu2>${wheel_mu2}</mu2>
      <kp>${wheel_kp}</kp>
      <kd>${wheel_kd}</kd>
    </gazebo>  
  </xacro:macro>

  <!-- Defining link materials. -->
  <gazebo reference="base_link">
      <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="top_link">
      <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="l_antenna_link">
      <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="r_antenna_link">
      <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="housing_link">
      <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="battery_link">
      <material>Gazebo/FlatBlack</material>
  </gazebo>

  <!-- Building from macros. -->
  <xacro:wheel prefix="lf" />
  <xacro:wheel prefix="lb" />
  <xacro:wheel prefix="rf" />
  <xacro:wheel prefix="rb" />

  <!-- Defining the skid-steer controller plugin. -->
  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <updateRate>10.0</updateRate>
      <robotNamespace></robotNamespace>
      <leftFrontJoint>lf_wheel_joint</leftFrontJoint>
      <rightFrontJoint>rf_wheel_joint</rightFrontJoint>
      <leftRearJoint>lb_wheel_joint</leftRearJoint>
      <rightRearJoint>rb_wheel_joint</rightRearJoint>
      <wheelSeparation>${wheel_separation}</wheelSeparation>
      <wheelDiameter>${wheel_diameter}</wheelDiameter>
      <robotBaseFrame>base_link</robotBaseFrame>
      <torque>${wheel_torque}</torque>
      <commandTopic>cmd_vel_mux/input/teleop</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <broadcastTF>10</broadcastTF>
      <covariance_x>0.0001</covariance_x>
      <covariance_y>0.0001</covariance_y>
      <covariance_yaw>0.01</covariance_yaw>
    </plugin>
  </gazebo>

 <!-- hokuyo -->
  <!--gazebo reference="hokuyo">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.0</min_angle>
            <max_angle>1.0</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type-->
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <!--mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/mybot/laser/scan</topicName>
        <frameName>hokuyo</frameName>
      </plugin>
    </sensor>
  </gazebo-->

</robot>
